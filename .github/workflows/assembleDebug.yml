name: Build APKs

on:
  push:

jobs:
  ktlintCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.0
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run Ktlint Check
        run: ./gradlew ktlintCheck

      - name: Check Java version
        run: java -version

  check-licenses:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - uses: actions/checkout@v4.1.0
      - name: Check licenses
        uses: ./.github/actions/check-licenses
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ssh-key: ${{ secrets.SVC_GH_ACTIONS_CLIENT_BUILDBOT_PAT }}
          path-repo: ${{ runner.temp }}

  assemble-apks:
    needs: ktlintCheck
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.0
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Run assemble ${{ matrix.config }} APKs
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: ./gradlew assemble${{ matrix.config }}